// Creates a file
func CreateFile(fname) {
    let name = fname.to_str();

    let f = File.create(name);
    return f;
}

// Creates a file if it doesn't exist
func CreateFileIfNExists(fname) {
    let name = fname.to_str();

    if !File.exists(name) {
        let f = File.create(name);
        return f;
    }
    else {
        return "";
    }
}

// Deletes a file
func DeleteFile(fname) {
    let name = fname.to_str();

    // File.delete(name)
    if File.exists(name) {
        File.delete(name);
    }
    else {
        print(Console.RED + "The file does not exist" + Console.DEFAULT);
    }
}

// Deletes a directory
func DeleteDirectory(fname) {
    let name = fname.to_str();

    // File.deletedir(name)
    if File.exists(name) {
        File.deletedir(name);
    }
    else {
        print(Console.RED + "The directory does not exist" + Console.DEFAULT);
    }
}

// Reads a file
func ReadFile(fname) {
    let name = fname.to_str();

    return File.read(name);
}

// Reads a file's lines
func ReadFileLines(fname) {
    let name = fname.to_str();

    return File.readlines(name);
}

// Reads a line of a file
func ReadFileLine(fname, fline) {
    let name = fname.to_str();
    let line = fline.to_str().to_int();

    let lines = File.readlines(name);
    return lines[line - 1];
}

// Writes to a file
func WriteFile(fname, ftext) {
    let name = fname.to_str();
    let text = ftext.to_str();

    return File.write(name, text);
}

// Appends text to a file
func AppendFile(fname, ftext) {
    let name = fname.to_str();
    let text = ftext.to_str();

    return File.append(name, text);
}

// Checks if a file exists
func CheckFileExists(fname) {
    let name = fname.to_str();

    return File.exists(name);
}

// Creates a file
func Create(fname) {
    return CreateFile(fname);
}

// Creates a file if it doesn't exist
func CreateIfNExists(fname) {
    return CreateFileIfNExists(fname);
}

// Deletes a file
func Delete(fname) {
    DeleteFile(fname);
}

// Deletes a directory
func DeleteDir(fname) {
    DeleteDirectory(fname);
}


// Reads a file
func Read(fname) {
    return ReadFile(fname);
}

// Reads a file's lines
func ReadLines(fname) {
    return ReadFileLines(fname);
}

// Reads a line of a file
func ReadLine(fname, fline) {
    return ReadFileLine(fname, fline);
}

// Writes to a file
func Write(fname, ftext) {
    return WriteFile(fname, ftext);
}


// Appends text to a file 
func Append(fname, ftext) {
    return AppendFile(fname, ftext);
}

// Checks if a file exists
func CheckExists(fname) {
    return CheckFileExists(fname);
}
